services:
  banana_idp:
    build:
      context: ./banana_idp  # path to your Node.js app
      dockerfile: Dockerfile  # optional if your Dockerfile is named `Dockerfile`
    develop:
      watch:
        - path: ./banana_idp
          action: rebuild
    depends_on:
      - banana_idp_db
      - banana_db
    ports:
      - "2884:2884"            # change port as needed
    networks:
      - banana_internal
    restart: on-failure

  banana_node:
    build:
      context: ./idp_node   # path to your Spring Boot app
      dockerfile: Dockerfile  # assumes Dockerfile is in the root of spring-app
    develop:
      watch:
        - path: ./idp_node
          action: rebuild
    depends_on:
      - banana_idp
      - banana_db
    ports:
      - "8080:8080"            # change if your Spring app uses a different port
    networks:
      - banana_internal
    restart: on-failure

  banana_idp_db:
    image: mariadb:latest
    environment:
      MARIADB_USER: banana_user
      MARIADB_PASSWORD: banana_pass
      MARIADB_DATABASE: banana_db
      MARIADB_RANDOM_ROOT_PASSWORD: 1
    volumes:
      - banana_db:/var/lib/mysql
    ports:
        - "3307:3306"            # change if your MySQL app uses a different port
    networks:
      - banana_internal

  banana_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: banana.node_db
      POSTGRES_USER: banana.node_user
      POSTGRES_PASSWORD: banana.node_pass
    volumes:
      - banana_pg_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - banana_internal

networks:
    banana_internal:
        driver: bridge
volumes:
  banana_db:
  banana_pg_db:




