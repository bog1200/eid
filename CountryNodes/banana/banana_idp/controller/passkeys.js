const db = require('../misc/database');
const { logAction, logTypes } = require("../misc/log");
const md5 = require('md5');

const createPasskey = async (req, res, next) => {
    const payload = {
        userId: req.session.user, // Required. A WebAuthn User Handle, which should be generated by your application. Max. 64 bytes.
        username: req.session.username // Required. A human readable username used for user authentication, should be chosen by the user.
        // ...For more options, please see the API reference for /register/token.
      };
      
      // POST the payload to the Passwordless.dev API using your API private secret.
      const apiUrl = 'https://v4.passwordless.dev';
      const { token } = await fetch(apiUrl + '/register/token', {
        method: 'POST',
        body: JSON.stringify(payload),
        headers: {
          'ApiSecret': process.env.PASSWORDLESS_SECRET,
          'Content-Type': 'application/json'
        }
      }).then((r) => r.json());
     return res.json({ token });
}

const countPasskeys = async (req, res, next) => {
  const apiUrl = 'https://v4.passwordless.dev';

  // Fetch the userId for the user in question.
  const payload = {
    userId: req.query.userId // Required. A WebAuthn User Handle, which should be generated by your application. Max. 64 bytes.
  };
  
  // POST the userId to the Passwordless.dev API using your API private secret.
  const credentials = await fetch(apiUrl + '/credentials/list?userId='+payload.userId, {
    method: 'GET',
    headers: {
      'ApiSecret': process.env.PASSWORDLESS_SECRET,
      'Content-Type': 'application/json'
    }})

    const passkeys = await credentials.json();

    return res.json({ count: passkeys.values.length });
}




const viewPasskey = async (req, res, next) => {


      
  const apiUrl = 'https://v4.passwordless.dev';

  // Fetch the userId for the user in question.
  const payload = {
    userId: req.session.user // Required. A WebAuthn User Handle, which should be generated by your application. Max. 64 bytes.
  };
  
  // POST the userId to the Passwordless.dev API using your API private secret.
  const credentials = await fetch(apiUrl + '/credentials/list?userId='+payload.userId, {
    method: 'GET',
    headers: {
      'ApiSecret': process.env.PASSWORDLESS_SECRET,
      'Content-Type': 'application/json'
    }})

    const passkeys = await credentials.json();

    return res.json({ passkeys });
  



}
  



module.exports = Object.assign({}, { createPasskey, countPasskeys, viewPasskey });