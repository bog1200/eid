services:
  orange_idp_db1:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: orange.idp_user
      MONGO_INITDB_ROOT_PASSWORD: orange.idp_pass
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27017:27017"
    networks:
      - orange_internal
    volumes:
      - orange_mongo_db1:/data/db

  orange_idp_db2:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: orange.idp_user
      MONGO_INITDB_ROOT_PASSWORD: orange.idp_pass
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27018:27017"
    networks:
      - orange_internal
    volumes:
      - orange_mongo_db2:/data/db

  orange_idp_db3:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: orange.idp_user
      MONGO_INITDB_ROOT_PASSWORD: orange.idp_pass
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27019:27017"
    networks:
      - orange_internal
    volumes:
      - orange_mongo_db3:/data/db

  orange_idp_db:
    image: mongo:latest
    networks:
      - orange_internal
    depends_on:
      - orange_idp_db1
      - orange_idp_db2
      - orange_idp_db3
    entrypoint: [ "bash", "-c", "sleep 10 && mongosh --host orange_idp_db1 --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"orange_idp_db1:27017\" }, { _id: 1, host: \"orange_idp_db2:27017\" }, { _id: 2, host: \"orange_idp_db3:27017\" }]})'" ]

  orange_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: orange.node_db
      POSTGRES_USER: orange.node_user
      POSTGRES_PASSWORD: orange.node_pass
    volumes:
      - orange_pg_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - orange_internal

  orange_node:
    build:
      context: ./idp_node   # path to your Spring Boot app
      dockerfile: Dockerfile  # assumes Dockerfile is in the root of spring-app
    develop:
      watch:
        - path: ./idp_node
          action: rebuild
    depends_on:
      - orange_db
    ports:
      - "8080:8080"            # change if your Spring app uses a different port
    networks:
      - orange_internal
    restart: on-failure
    
volumes:
  orange_pg_db:
  orange_mongo_db1:
  orange_mongo_db2:
  orange_mongo_db3:

networks:
  orange_internal:
    driver: bridge